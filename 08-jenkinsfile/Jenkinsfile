pipeline {
    agent any
    environment {
        STAGIN_IP='192.168.33.80'
        NEXUS_IP='192.168.33.90'
        PRODUCTION_IP='192.168.33.85'
    }
     tools {
        go 'go_lang'
    }
    options {
        timestamps ()
    }
   stages {
        stage ('Get code') {
           steps {
                git 'https://github.com/owl-sarge/word-cloud-generator.git'
            }
        }
        stage('Testing code') {
            steps {
                sh ''' make lint
                       make test
                   '''
            }
        }
        stage('Build code and upload') {
            steps {
                sh '''sed -i "s/1.DEVELOPMENT/1.$BUILD_NUMBER/g" static/version

                      GOOS=linux GOARCH=amd64 go build -o ./artifacts/word-cloud-generator -v

                      gzip -f ./artifacts/word-cloud-generator
                   '''
                nexusArtifactUploader(
                    nexusVersion: 'nexus3',
                    protocol: 'http',
                    nexusUrl: '192.168.33.90:8081/',
                    groupId: 'pipe',
                    version: '1.$BUILD_NUMBER',
                    repository: 'word-cloud-build',
                    credentialsId: 'nexus-creds',
                    artifacts: [
                        [artifactId: 'word-cloud',
                        classifier: '',
                        file: './artifacts/word-cloud-generator.gz',
                        type: 'gz']
                    ]
                )
            }
        }
        stage ('Install and test app on stagin'){
            steps{
                withCredentials([usernamePassword(credentialsId: 'slave_creds', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    withCredentials([usernamePassword(credentialsId: 'nexus-creds', usernameVariable: 'NEXUS_USER', passwordVariable: 'NEXUS_PASSWORD')]) {
                        sh '''  
                                sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no $USERNAME@$STAGIN_IP "sudo service wordcloud stop"
                                sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no $USERNAME@$STAGIN_IP "curl -X GET http://$NEXUS_IP:8081/repository/word-cloud-build/pipe/word-cloud/1.$BUILD_NUMBER/word-cloud-1.$BUILD_NUMBER.gz -o /opt/wordcloud/word-cloud-generator.gz -u $NEXUS_USER:$NEXUS_PASSWORD"
                                sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no $USERNAME@$STAGIN_IP "gunzip -f  /opt/wordcloud/word-cloud-generator.gz && chmod +x  /opt/wordcloud/word-cloud-generator && sudo service wordcloud start"
                          '''
                    }          
                }   
            }

        }
        stage ('Install on production'){
            steps {
                withCredentials([usernamePassword(credentialsId: 'slave_creds', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                    withCredentials([usernamePassword(credentialsId: 'nexus-creds', usernameVariable: 'NEXUS_USER', passwordVariable: 'NEXUS_PASSWORD')]) {
                        sh '''  
                                sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no $USERNAME@$PRODUCTION_IP "sudo service wordcloud stop"
                                sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no $USERNAME@$PRODUCTION_IP "curl -X GET http://$NEXUS_IP:8081/repository/word-cloud-build/pipe/word-cloud/1.$BUILD_NUMBER/word-cloud-1.$BUILD_NUMBER.gz -o /opt/wordcloud/word-cloud-generator.gz -u $NEXUS_USER:$NEXUS_PASSWORD"
                                sshpass -p $PASSWORD ssh -o StrictHostKeyChecking=no $USERNAME@$PRODUCTION_IP "gunzip -f  /opt/wordcloud/word-cloud-generator.gz && chmod +x  /opt/wordcloud/word-cloud-generator && sudo service wordcloud start"
                          '''    
                    }            
                        
                }
            }
        }
    }    
} 
